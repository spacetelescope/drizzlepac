// Obtain files from source control system.
if (utils.scm_checkout()) return


def test_env = [
    'PATH=./miniconda/bin:$PATH',
    'HOME=./',
    'TEST_BIGDATA=https://bytesalad.stsci.edu/artifactory'
]


// Configure artifactory ingest
data_config = new DataConfig()
data_config.server_id = 'bytesalad'
data_config.root = 'tests_output'
data_config.match_prefix = '(.*)_result' // .json is appended automatically


bc = new BuildConfig()
bc.nodetype = 'linux'
bc.env_vars = test_env
bc.name = '3.6'
bc.conda_channels = ['http://ssb.stsci.edu/astroconda']
bc.conda_packages = ['numpy',
                     'fitsblender',
                     'graphviz',
                     'nictools',
                     'numpydoc',
                     'pyregion',
                     'pytest=3.8.2',
                     'pytest-remotedata',
                     'crds',
                     'scipy',
                     'spherical-geometry',
                     'sphinx',
                     'sphinx_rtd_theme',
                     'stsci_rtd_theme',
                     'stsci.convolve',
                     'stsci.image',
                     'stsci.imagemanip',
                     'stsci.imagestats',
                     'stsci.ndimage',
                     'stsci.skypac',
                     'stregion',
                     'stsci.stimage',
                     'setuptools',
                     'python=3.6']
bc.build_cmds = ["conda install -q astropy stwcs -c http://ssb.stsci.edu/astroconda-dev",
                 "python setup.py install"]
bc.test_cmds = ["pytest --basetemp=tests_output --junitxml results.xml --bigdata --remote-data=any"]
bc.test_configs = [data_config]

utils.run([bc])

