name: CI

on:
  push:
    branches:
      - master
      - '*x'
    tags:
      - '*'
  pull_request:
  schedule:
    # Weekly Monday 9AM build
    - cron: "2 20 * * 3"

env:
  CRDS_SERVER_URL: https://hst-crds.stsci.edu
  CRDS_PATH: $HOME/crds_cache
  CRDS_CLIENT_RETRY_COUNT: 3
  CRDS_CLIENT_RETRY_DELAY_SECONDS: 20

jobs:
  tox:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Python 3.10 Linux Tests
            python-version: '3.10'
            os: ubuntu-latest
            toxenv: py310-mylinux

          - name: Latest Linux dependency versions w/coverage
            os: ubuntu-latest
            python-version: 3.9
            toxenv: py39-mylinux

          - name: Oldest Linux dependency versions
            os: ubuntu-latest
            python-version: 3.8
            toxenv: py38-mylinux

          - name: macOS Python 3.9
            os: macos-latest
            python-version: 3.9
            toxenv: py39-mymacos

          #- name: macOS Python 3.10
          #  os: macos-latest
          #  python-version: 3.10
          #  toxenv: py310-mymacos

          #- name: windows Python 3.9
          #  os: windows-latest
          #  python-version: 3.9
          #  toxenv: py39-mywindows

          - name: SDP Linux dependencies in requirements-dev.txt
            os: ubuntu-latest
            python-version: 3.9
            toxenv: devdeps

          #- name: Security audit under Linux
          #  os: ubuntu-latest
          #  python-version: 3.9
          #  toxenv: security

          - name: Docs build under Linux
            os: ubuntu-latest
            python-version: 3.9
            toxenv: docs

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install tox
        run: |
          pip install tox

      - name: Build C extensions
        run: pip install -e .

      - name: Run tests
        run: tox -e ${{ matrix.toxenv }}

      #- name: Upload coverage to codecov
      #  if: ${{ contains(matrix.toxenv,'-cov') }}
      #  uses: codecov/codecov-action@v2
      #  with:
      #    file: ./coverage.xml
      #    flags: unit
      #    fail_ci_if_error: true
